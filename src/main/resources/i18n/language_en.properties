action.start.regexp=[{0}] Execute event action.
action.condition.status.regexp=[{0}] Condition status: {1}, next execute action: {2}.
action.prepare.regexp=[{0}] Prepare event action, action code: {1}.
action.prepare.param.regexp=[{0}] Get the parameters of the last event action, bind parameter values count: {1}.
action.prepare.complete.regexp=[{0}] Load event action parameters complete, action parameter list count: {1}.
action.output.complete.regexp=[{0}] Execute event action complete, execute result count: {1}.
action.output.update.regexp=[{0}] Update output parameters, output parameter list count: {1}.
action.error.message.regexp=[{0}] An error occurred: {1}

# channel.receive.message.regexp=Receive a channel message, start parsing the message.
channel.message.parse.complete.regexp=Parse channel message completed, message format: {0}, message parameter list count: {1}.
channel.error.regexp=Channel message parse error: {0}
channel.message.filter.regexp=Event channel message duplicate filtering, process status: {0}.

event.start.regexp=Start event calculation, prepare the global session, setting done.
event.message.warn.regexp=Channel message status: {0}, skip event calculation.
event.show.action.regexp=Get {0} event actions.
event.complete.regexp=Event calculation completed, start storage processing.
event.calc.time.regexp=Total event processing time: {0} ms, channel message processing time: {1} ms, event calculation time: {2} ms.
event.error.regexp=Executing event action error: {0}
event.debug.message.regexp=[DEBUG] {0}
event.pattern.matched.regexp=Pattern matching succeeded, matched {0} patterns and captured {1} event messages.